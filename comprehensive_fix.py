#!/usr/bin/env python3
"""
综合修复main.py中的所有字符串和引号错误
"""

import re

def comprehensive_fix():
    # 读取文件
    with open('main.py', 'r', encoding='utf-8') as f:
        content = f.read()
    
    # 一系列已知的修复
    fixes = [
        # 修复四个引号的问题
        ('""""', '"""'),
        
        # 修复三个引号开始但只有一个或两个引号结束的问题
        ('"""([^"]*)"(?!")', r'"\1"'),  # 三个引号开始，一个引号结束
        ('"""([^"]*)")"', r'"\1"'),    # 三个引号开始，两个引号结束
        
        # 修复特定的已知错误
        ('resource.type == """water"]', 'resource.type == "water"]'),
        ('"""动物类(部分动物实现,后期动物可按需加入"""', '"动物类(部分动物实现,后期动物可按需加入"'),
        
        # 修复注释中的错误
        ('# 检查移动是否有"', '# 检查移动是否有效'),
        ('# 设置日志记录"', '# 设置日志记录'),
        ('# 可选草原、沙漠、林地、山"', '# 可选草原、沙漠、林地、山地'),
        ('# 百分比,1%个000%', '# 百分比,1%-1000%'),
        ('# 天数从天到100"', '# 天数1天到100天'),
        ('# 游戏时长(回合数,每回合为一天)从天到10000从[修改: 300->30天]', '# 游戏时长(回合数,每回合为一天)1天到10000天[修改: 300->30天]'),
        ('# 每隔多少天群体狩猎一"', '# 每隔多少天群体狩猎一次'),
        ('# 婴儿学习 AI 在推理上分配的注意力比例(百分比"', '# 婴儿学习 AI 在推理上分配的注意力比例(百分比)'),
        ('# 分享假消息比"', '# 分享假消息比例'),
        ('# 在种子之后插入猛兽数"', '# 在种子之后插入猛兽数量'),
        ('# 生成"网格"地图,并在地图上随机放置动物和植"', '# 生成网格地图,并在地图上随机放置动物和植物'),
        ('if animal.hp <= 0:', 'if animal.hp <= 0:'),
        
        # 特定错误修复
        ('minimum_experience_threshold', 'minimum_experience_threshold'),
        ('"""构建价值网络""""', '"""构建价值网络"""'),
        
        # 其他已知的字符串错误
        ('从天到10000从', '1天到10000天'),
        ('个000%', '-1000%'),
        
        # 修复其他格式问题
        ('"""触发探索学习率"""', '"""触发探索学习"""'),
        
        # 特定的函数调用错误
        ('所有初始参数由首页面板控制', '所有初始参数由首页面板控制'),
    ]
    
    # 应用所有修复
    for old, new in fixes:
        content = content.replace(old, new)
    
    # 使用正则表达式修复一些模式化的错误
    # 修复类似 f"""xxx" 的错误
    content = re.sub(r'f"""([^"]*)"(?!")', r'f"\1"', content)
    
    # 修复类似 logger.log(f"""xxx") 的错误
    content = re.sub(r'logger\.log\(f"""([^"]*)"(\)|,)', r'logger.log(f"\1"\2', content)
    content = re.sub(r'self\.logger\.log\(f"""([^"]*)"(\)|,)', r'self.logger.log(f"\1"\2', content)
    
    # 写回文件
    with open('main.py', 'w', encoding='utf-8') as f:
        f.write(content)
    
    print("综合修复完成！")

if __name__ == "__main__":
    comprehensive_fix() 